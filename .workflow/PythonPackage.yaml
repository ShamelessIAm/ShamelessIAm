name: Python package

  on:[push]

    jobs:

    build: Python
      runs-on: ubuntu-latest
      strategy:
 	    matrix:
          python-version: ["3.8.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python '3.8.10'
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.10'
      - name: Display Python version
        run: Python -c import sys; print(sys.version)
        run: pip test
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    	    continue-on-error: true
      - name: Test with pytest
        run: |
          pip install pytest
    	    pip install pytest-cov
	        pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
        run: pytest tests.py --doctest-modules --junitxml=junit/test-results-{'3.8.10'}.xml
      - name: Upload pytest test results
          uses: actions/upload-artifact@v3
        with:
        name: pytest-results-${'3.8.10'}
        path: junit/test-results-${'3.8.10'}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}	
